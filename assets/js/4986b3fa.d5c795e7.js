"use strict";(self.webpackChunkskyrimnet_docs=self.webpackChunkskyrimnet_docs||[]).push([[8422],{1818:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Features/action-system","title":"Action System","description":"The Custom Action System in SkyrimNet allows you to expose any Papyrus function as an AI-accessible action, turning existing mod functionality into intelligent, context-aware behaviors. It\u2019s designed for both mod authors and non-programmers, with a clear visual interface and zero need to write code.","source":"@site/docs/Features/Action System.md","sourceDirName":"Features","slug":"/Features/action-system","permalink":"/SkyrimNet-GamePlugin/Features/action-system","draft":false,"unlisted":false,"editUrl":"https://github.com/goncalo22/SkyrimNet-GamePlugin/edit/main/docs/Features/Action System.md","tags":[],"version":"current","frontMatter":{"id":"action-system","title":"Action System","displayed_sidebar":"tutorialSidebar"},"sidebar":"tutorialSidebar","previous":{"title":"Player Dialogue","permalink":"/SkyrimNet-GamePlugin/Features/player-dialogue"},"next":{"title":"Dependencies","permalink":"/SkyrimNet-GamePlugin/Installation Guide/dependencies"}}');var s=n(4848),o=n(8453);const a={id:"action-system",title:"Action System",displayed_sidebar:"tutorialSidebar"},r="Custom AI Action System (SkyrimNet)",c={},d=[];function l(e){const t={code:"code",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"custom-ai-action-system-skyrimnet",children:"Custom AI Action System (SkyrimNet)"})}),"\n",(0,s.jsx)(t.p,{children:"The Custom Action System in SkyrimNet allows you to expose any Papyrus function as an AI-accessible action, turning existing mod functionality into intelligent, context-aware behaviors. It\u2019s designed for both mod authors and non-programmers, with a clear visual interface and zero need to write code."}),"\n",(0,s.jsx)(t.p,{children:"At its core, the system lets you define actions that AI-controlled NPCs can choose to perform based on context, emotion, memory, or ongoing events. These actions can be as simple as playing an animation or as complex as triggering scripted quests with parameters. Each custom action is defined through a guided interface in four steps: basic information, function setup, usage conditions, and advanced options."}),"\n",(0,s.jsx)(t.p,{children:"When creating an action, you begin by selecting a Papyrus function from any installed mod. Once selected, the system automatically pulls in the function signature and parameters, allowing you to configure how each argument should be filled."}),"\n",(0,s.jsx)(t.p,{children:"Parameters can be assigned in several modes:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Speaker mode"}),": Automatically uses the actor who triggered the action."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Smart mode"}),": Lets the AI determine the best value based on context, assisted by custom descriptions."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Fixed values"}),": You provide a specific value, with type validation (e.g., int, bool, Actor, string)."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Eligibility rules ensure that only appropriate characters can use a given action. These rules are created visually using a decorator-based system. For example, a \u201cMeditate\u201d action might only be usable by characters in the ",(0,s.jsx)(t.code,{children:"Monk"})," faction. You can combine multiple conditions with AND/OR logic, and the interface provides real-time validation and feedback."]}),"\n",(0,s.jsxs)(t.p,{children:["All actions are stored as readable ",(0,s.jsx)(t.code,{children:".yaml"})," files under a hot-reloadable directory. This makes editing and sharing actions simple, and enables modders to bundle actions with their mods for seamless distribution. Each YAML entry describes the function, parameter behavior, and eligibility rules\u2014everything the AI needs to decide when and how to use it."]}),"\n",(0,s.jsx)(t.p,{children:"The system also supports advanced features like cooldowns, priority ordering, and optional event generation upon completion. For example, triggering a \u201cDrink Potion\u201d action can emit a new event the AI can react to, allowing for narrative consequences or memory updates."}),"\n",(0,s.jsx)(t.p,{children:"Combined with the AI Trigger System, the Custom Action System offers an expressive and modular way to build complex, emergent NPC behavior\u2014no Papyrus scripting required."})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(6540);const s={},o=i.createContext(s);function a(e){const t=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);