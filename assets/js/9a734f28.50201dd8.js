"use strict";(self.webpackChunkskyrimnet_docs=self.webpackChunkskyrimnet_docs||[]).push([[5323],{8131:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Skyrimnet API/decorators","title":"Decorators","description":"------------------------------","source":"@site/docs/Skyrimnet API/Decorators.mdx","sourceDirName":"Skyrimnet API","slug":"/Skyrimnet API/decorators","permalink":"/SkyrimNet-GamePlugin/Skyrimnet API/decorators","draft":false,"unlisted":false,"editUrl":"https://github.com/goncalo22/SkyrimNet-GamePlugin/edit/main/docs/Skyrimnet API/Decorators.mdx","tags":[],"version":"current","frontMatter":{"id":"decorators","title":"Decorators","displayed_sidebar":"apiSidebar"},"sidebar":"apiSidebar","previous":{"title":"Library","permalink":"/SkyrimNet-GamePlugin/Skyrimnet API/library"}}');var s=r(4848),t=r(8453);const c={id:"decorators",title:"Decorators",displayed_sidebar:"apiSidebar"},o=void 0,l={},d=[{value:"Actor Functions",id:"actor-functions",level:2},{value:"<code>decnpc(actorUUID: uint64_t) \u2192 object</code>",id:"decnpcactoruuid-uint64_t--object",level:3},{value:"<code>isValidActor(actorUUID: uint64_t) \u2192 boolean</code>",id:"isvalidactoractoruuid-uint64_t--boolean",level:3},{value:"Environment Functions",id:"environment-functions",level:2},{value:"<code>currentWeather \u2192 object</code>",id:"currentweather--object",level:3},{value:"Equipment Functions",id:"equipment-functions",level:2},{value:"<code>get_worn_equipment(actorUUID: uint64_t) \u2192 object</code>",id:"get_worn_equipmentactoruuid-uint64_t--object",level:3},{value:"<code>worn_has_keyword(actorUUID: uint64_t, keywordEditorID: string) \u2192 boolean</code>",id:"worn_has_keywordactoruuid-uint64_t-keywordeditorid-string--boolean",level:3},{value:"<code>get_inventory(actorUUID: uint64_t) \u2192 object</code>",id:"get_inventoryactoruuid-uint64_t--object",level:3},{value:"Faction Functions",id:"faction-functions",level:2},{value:"<code>is_in_faction(actorUUID: uint64_t, factionName: string) \u2192 boolean</code>",id:"is_in_factionactoruuid-uint64_t-factionname-string--boolean",level:3},{value:"<code>get_faction_rank(actorUUID: uint64_t, factionName: string) \u2192 integer</code>",id:"get_faction_rankactoruuid-uint64_t-factionname-string--integer",level:3},{value:"Game System Functions",id:"game-system-functions",level:2},{value:"<code>prompt_file_exists(filename: string, prefix?: string) \u2192 boolean</code>",id:"prompt_file_existsfilename-string-prefix-string--boolean",level:3},{value:"<code>get_form_name(formID: uint32_t) \u2192 string</code>",id:"get_form_nameformid-uint32_t--string",level:3},{value:"<code>is_narration_enabled \u2192 boolean</code>",id:"is_narration_enabled--boolean",level:3},{value:"<code>units_to_meters(units: number|string) \u2192 float</code>",id:"units_to_metersunits-numberstring--float",level:3},{value:"<code>get_civil_war_side \u2192 string</code>",id:"get_civil_war_side--string",level:3},{value:"Item Customization Functions",id:"item-customization-functions",level:2},{value:"<code>is_item_enabled(formID: number) \u2192 boolean</code>",id:"is_item_enabledformid-number--boolean",level:3},{value:"Mood Functions",id:"mood-functions",level:3},{value:"moodsList \u2192 array",id:"moodslist--array",level:3},{value:"moodDescriptions \u2192 object",id:"mooddescriptions--object",level:3},{value:"mood_description(mood: string) \u2192 string",id:"mood_descriptionmood-string--string",level:3},{value:"player (variable)",id:"player-variable",level:3},{value:"Quest Functions",id:"quest-functions",level:3},{value:"get_all_active_quests \u2192 array",id:"get_all_active_quests--array",level:3},{value:"get_quest_stage(questIdentifier: uint32_t|string, onlyWhileActive?: boolean) \u2192 integer",id:"get_quest_stagequestidentifier-uint32_tstring-onlywhileactive-boolean--integer",level:3},{value:"is_quest_active(questIdentifier: uint32_t|string) \u2192 boolean",id:"is_quest_activequestidentifier-uint32_tstring--boolean",level:3},{value:"Scene Functions",id:"scene-functions",level:3},{value:"get_short_lived_events_count \u2192 integer",id:"get_short_lived_events_count--integer",level:3},{value:"get_nearby_npc_list(sourceUUID: uint64_t) \u2192 array",id:"get_nearby_npc_listsourceuuid-uint64_t--array",level:3},{value:"get_active_short_lived_events \u2192 array",id:"get_active_short_lived_events--array",level:3},{value:"get_short_lived_events_by_type(eventType: string) \u2192 array",id:"get_short_lived_events_by_typeeventtype-string--array",level:3},{value:"get_short_lived_events_by_entity(entityUUID: uint64_t) \u2192 array",id:"get_short_lived_events_by_entityentityuuid-uint64_t--array",level:3},{value:"String Utility Functions",id:"string-utility-functions",level:3},{value:"join(array: array, separator: string) \u2192 string",id:"joinarray-array-separator-string--string",level:3},{value:"length(value: array|string) \u2192 integer",id:"lengthvalue-arraystring--integer",level:3},{value:"lower(text: string) \u2192 string",id:"lowertext-string--string",level:3},{value:"contains(container: array|string, searchValue: string) \u2192 boolean",id:"containscontainer-arraystring-searchvalue-string--boolean",level:3},{value:"to_number(text: string) \u2192 number",id:"to_numbertext-string--number",level:3},{value:"is_array(value: any) \u2192 boolean",id:"is_arrayvalue-any--boolean",level:3},{value:"World Functions",id:"world-functions",level:3},{value:"currentTime \u2192 string",id:"currenttime--string",level:3},{value:"gameTime \u2192 string",id:"gametime--string",level:3},{value:"location \u2192 string",id:"location--string",level:3},{value:"gameTimeJson \u2192 object",id:"gametimejson--object",level:3},{value:"short_time(timeString: string) \u2192 string",id:"short_timetimestring-string--string",level:3},{value:"Variables",id:"variables",level:3},{value:"timestamp \u2192 integer",id:"timestamp--integer",level:4},{value:"location \u2192 string",id:"location--string-1",level:4}];function a(e){const n={br:"br",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"actor-functions",children:"Actor Functions"}),"\n",(0,s.jsx)(n.h3,{id:"decnpcactoruuid-uint64_t--object",children:(0,s.jsx)(n.code,{children:"decnpc(actorUUID: uint64_t) \u2192 object"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nDecorates an actor with comprehensive information like name, race, level, factions, pronouns, combat status, and more."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"actorUUID (uint64_t)"})," \u2013 The UUID of the actor to decorate"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nA JSON object with detailed actor information."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{{ decnpc(player.UUID) }}\r\n{% set npc = decnpc(actorID) %}{{ npc.name }} is a {{ npc.race }}\r\n{% if decnpc(actorID).isInCombat %}The actor is fighting!{% endif %}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"isvalidactoractoruuid-uint64_t--boolean",children:(0,s.jsx)(n.code,{children:"isValidActor(actorUUID: uint64_t) \u2192 boolean"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nChecks if an actor UUID is valid and refers to a live actor in the world."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"actorUUID (uint64_t)"})," \u2013 UUID of the actor to check"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nTrue if the actor exists, false otherwise."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{% if isValidActor(targetUUID) %}{{ decnpc(targetUUID).name }}{% endif %}\r\n{{ isValidActor(player.UUID) }}\r\n{% for actorId in nearbyActors %}{% if isValidActor(actorId) %}...{% endif %}{% endfor %}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"environment-functions",children:"Environment Functions"}),"\n",(0,s.jsx)(n.h3,{id:"currentweather--object",children:(0,s.jsx)(n.code,{children:"currentWeather \u2192 object"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nInformation about the current weather \u2013 name, type, precipitation, etc."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nA weather object with fields like ",(0,s.jsx)(n.code,{children:"isRaining"}),", ",(0,s.jsx)(n.code,{children:"isSnowing"}),", ",(0,s.jsx)(n.code,{children:"formID"}),", and ",(0,s.jsx)(n.code,{children:"name"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{% if currentWeather.isRaining %}It's raining outside{% endif %}\r\nThe weather is {{ currentWeather.name }} (ID: {{ currentWeather.formID }})\r\n{% if currentWeather.isSnowing %}Snow is falling\r\n{% else if currentWeather.isRaining %}Rain is pouring\r\n{% else %}The sky is clear{% endif %}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"equipment-functions",children:"Equipment Functions"}),"\n",(0,s.jsx)(n.h3,{id:"get_worn_equipmentactoruuid-uint64_t--object",children:(0,s.jsx)(n.code,{children:"get_worn_equipment(actorUUID: uint64_t) \u2192 object"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nReturns a comprehensive list of all equipment worn by the specified actor, including armor, weapons, jewelry, and hand-held items. Each item includes details like name, type, value, combat statistics, and all associated keywords."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"actorUUID (uint64_t)"})," \u2013 The UUID of the actor whose equipment to retrieve"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nObject containing worn equipment organized by slot (head, body, hands, etc.) with detailed item information including keywords."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{{ get_worn_equipment(player.UUID).body.name }}\r\n{% set equipment = get_worn_equipment(targetActor) %}{% if equipment.head %}Wearing: {{ equipment.head.name }}{% endif %}\r\n{% for slot, item in get_worn_equipment(player.UUID) %}{{ slot }}: {{ item.name }}{% endfor %}\r\nRight hand weapon: {{ get_worn_equipment(player.UUID).rightHand.name }}\r\n{% for keyword in get_worn_equipment(player.UUID).rightHand.keywords %}{{ keyword.editorID }}{% endfor %}\r\n{% if get_worn_equipment(player.UUID).body.keywords %}Material keywords: {% for kw in get_worn_equipment(player.UUID).body.keywords %}{{ kw.editorID }} {% endfor %}{% endif %}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"worn_has_keywordactoruuid-uint64_t-keywordeditorid-string--boolean",children:(0,s.jsx)(n.code,{children:"worn_has_keyword(actorUUID: uint64_t, keywordEditorID: string) \u2192 boolean"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nReturns true if the actor is wearing any equipment that has the specified keyword."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"actorUUID (uint64_t)"})," \u2013 The UUID of the actor to check"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"keywordEditorID (string)"})," \u2013 The editor ID of the keyword to check for"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nBoolean \u2013 True if wearing the keyworded item, false otherwise."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{% if worn_has_keyword(player.UUID, "ArmorMaterialDragonplate") %}You\'re wearing dragonplate armor!{% endif %}\r\n{% if worn_has_keyword(targetActor, "WeapTypeSword") %}{{ actor(targetActor).name }} is wielding a sword.{% endif %}\r\n{% if worn_has_keyword(player.UUID, "ArmorHeavy") %}Heavy armor detected{% else %}Light or no armor{% endif %}\r\n{{ worn_has_keyword(player.UUID, "MagicDisallowEnchanting") }}\r\n{% if worn_has_keyword(player.UUID, "VendorItemJewelry") %}Wearing jewelry{% endif %}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"get_inventoryactoruuid-uint64_t--object",children:(0,s.jsx)(n.code,{children:"get_inventory(actorUUID: uint64_t) \u2192 object"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nReturns a comprehensive list of all items in the actor's inventory, including count, value, weight, and keywords."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"actorUUID (uint64_t)"})," \u2013 UUID of the actor to retrieve inventory for"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nObject indexed by form ID with detailed item data."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{% for formID, item in get_inventory(player.UUID) %}{{ item.name }}: {{ item.count }}{% endfor %}\r\n{{ get_inventory(player.UUID)["0x12EB7"].count }}\r\n{% set inv = get_inventory(targetActor) %}Total items: {{ inv|length }}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"faction-functions",children:"Faction Functions"}),"\n",(0,s.jsx)(n.h3,{id:"is_in_factionactoruuid-uint64_t-factionname-string--boolean",children:(0,s.jsx)(n.code,{children:"is_in_faction(actorUUID: uint64_t, factionName: string) \u2192 boolean"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nReturns whether an actor is a member of a specific faction."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"actorUUID (uint64_t)"})," \u2013 UUID of the actor"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"factionName (string)"})," \u2013 Name of the faction"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nBoolean \u2013 True if in faction, false otherwise."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{% if is_in_faction(player.UUID, "Companions") %}You are a Companion!{% endif %}\r\n{{ is_in_faction(actorId, "Thieves Guild") }}\r\n{% if is_in_faction(npc.UUID, "Guards") %}This is a guard.{% endif %}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"get_faction_rankactoruuid-uint64_t-factionname-string--integer",children:(0,s.jsx)(n.code,{children:"get_faction_rank(actorUUID: uint64_t, factionName: string) \u2192 integer"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nReturns the numeric rank of the specified actor within a given faction."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"actorUUID (uint64_t)"})," \u2013 UUID of the actor"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"factionName (string)"})," \u2013 Name of the faction"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nInteger \u2013 Rank number, or -1 if not in faction."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'Your rank in the Companions is {{ get_faction_rank(player.UUID, "Companions") }}\r\n{% set rank = get_faction_rank(actorId, "College of Winterhold") %}{% if rank > 0 %}Rank: {{ rank }}{% endif %}\r\n{% if get_faction_rank(player.UUID, "Thieves Guild") >= 4 %}You are a high-ranking member!{% endif %}\n'})}),"\n",(0,s.jsx)(n.h2,{id:"game-system-functions",children:"Game System Functions"}),"\n",(0,s.jsx)(n.h3,{id:"prompt_file_existsfilename-string-prefix-string--boolean",children:(0,s.jsx)(n.code,{children:"prompt_file_exists(filename: string, prefix?: string) \u2192 boolean"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nChecks whether a specific prompt file exists in the mod's prompt directory or subfolder."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"filename (string)"})," \u2013 Name of the prompt file"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"prefix (string)"})," \u2013 Optional subfolder (e.g., quests, characters)"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nBoolean \u2013 True if the file exists, false otherwise."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{% if prompt_file_exists("character_dialogue") %}{{ render_template("character_dialogue") }}{% endif %}\r\n{{ prompt_file_exists("custom_prompt.prompt") }}\r\n{% if prompt_file_exists("MainQuest", "quests") %}Quest template available{% endif %}\r\nFile check: {{ prompt_file_exists(filename, "components") }}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"get_form_nameformid-uint32_t--string",children:(0,s.jsx)(n.code,{children:"get_form_name(formID: uint32_t) \u2192 string"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nReturns the display name of a game object by its form ID."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"formID (uint32_t)"})," \u2013 The form ID"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nString \u2013 Display name or empty if not found."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{{ get_form_name(0x00012eb7) }}\r\nItem: {{ get_form_name(itemFormID) }}\r\n{% set itemName = get_form_name(formId) %}{% if itemName %}Found: {{ itemName }}{% endif %}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"is_narration_enabled--boolean",children:(0,s.jsx)(n.code,{children:"is_narration_enabled \u2192 boolean"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nChecks if narration is enabled in the configuration."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nBoolean \u2013 True if enabled, false otherwise."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{% if is_narration_enabled() %}[Narration enabled]{% endif %}\r\n{{ is_narration_enabled() }}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"units_to_metersunits-numberstring--float",children:(0,s.jsx)(n.code,{children:"units_to_meters(units: number|string) \u2192 float"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nConverts game units to meters."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"units (number|string)"})," \u2013 Distance in game units"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nFloat \u2013 Distance in meters."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{{ units_to_meters(actor.distanceToPlayer) }} meters away\r\nDistance: {{ units_to_meters(1000) }}m\r\n{% set meters = units_to_meters(distance) %}{{ meters }}m\n"})}),"\n",(0,s.jsx)(n.h3,{id:"get_civil_war_side--string",children:(0,s.jsx)(n.code,{children:"get_civil_war_side \u2192 string"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description:"}),"\r\nReturns the player's civil war allegiance."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"}),"\r\nString \u2013 'Imperial', 'Stormcloak', or 'Neutral'."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'You fight for the {{ get_civil_war_side() }}s!\r\n{% if get_civil_war_side() == "Imperial" %}Long live the Empire!{% endif %}\r\nCivil War Side: {{ get_civil_war_side() }}\n'})}),"\n",(0,s.jsx)(n.h1,{id:"general-variables",children:"General Variables"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Variable"}),(0,s.jsx)(n.th,{children:"Type"}),(0,s.jsx)(n.th,{children:"Example"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"page_name"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{{ page_name }} \u2192 ItemCustomization"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"request_path"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{{ request_path }} \u2192 /item-customization"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"request_method"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{{ request_method }} \u2192 GET"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"page_title"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{{ page_title }} \u2192 Item Customization Configuration"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"server_name"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{{ server_name }} \u2192 SkyrimNet HTTP Server"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"version"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{{ version }} \u2192 1.0.0"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"page_subtitle"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{{ page_subtitle }} \u2192 Manage custom names and descriptions for game items"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"currentTime"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{{ currentTime }} \u2192 2025-07-07 07:18:43Z"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"gameTime"})}),(0,s.jsx)(n.td,{children:"string"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{{ gameTime }} \u2192 8:00 AM, Morndas, 17th of Last Seed, 4E 201"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"gameTimeJson"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{{ gameTimeJson }}"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"currentWeather"})}),(0,s.jsx)(n.td,{children:"object"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"{{ currentWeather }}"})})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"item-customization-functions",children:"Item Customization Functions"}),"\n",(0,s.jsx)(n.h3,{id:"is_item_enabledformid-number--boolean",children:(0,s.jsx)(n.code,{children:"is_item_enabled(formID: number) \u2192 boolean"})}),"\n",(0,s.jsx)(n.p,{children:"Check if an item is enabled in the customization system."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Arguments:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"formID"})," (number) \u2013 The form ID of the item (e.g., ",(0,s.jsx)(n.code,{children:"0x12EB7"}),")"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns:"})," boolean \u2013 True if enabled, false if disabled"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Examples:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{% if is_item_enabled(0x12EB7) %}Item is available{% endif %}\r\n{{ is_item_enabled(0x3AD5E) }}\r\n{% if not is_item_enabled(0x12EB7) %}Item is disabled{% endif %}\r\nget_item_name(formID: number) \u2192 string\r\nGet the effective display name for an item.\r\n\r\nArguments:\r\n\r\nformID (number)\r\n\r\nReturns: string \u2013 Custom or original name\r\n\r\nExamples:\r\n\r\njinja\r\nCopiar\r\nEditar\r\n{{ get_item_name(0x12EB7) }}\r\nItem name: {{ get_item_name(0x3AD5E) }}\r\n{% set itemName = get_item_name(0x12EB7) %}{{ itemName }}\r\nget_item_description(formID: number) \u2192 string\r\nGet the custom description for an item.\r\n\r\nArguments:\r\n\r\nformID (number)\r\n\r\nReturns: string \u2013 Custom description or empty string\r\n\r\nExamples:\r\n\r\njinja\r\nCopiar\r\nEditar\r\n{{ get_item_description(0x12EB7) }}\r\n{% set desc = get_item_description(0x3AD5E) %}{% if desc %}{{ desc }}{% endif %}\r\nDescription: {{ get_item_description(0x12EB7) }}\r\nget_item_customization(formID: number) \u2192 object\r\nGet all customization data for an item.\r\n\r\nArguments:\r\n\r\nformID (number)\r\n\r\nReturns: object \u2013 Includes name, description, enabled state, and flags\r\n\r\nExamples:\r\n\r\n```jinja\r\n{{ get_item_customization(0x12EB7).name }}\r\n{% set item = get_item_customization(0x12EB7) %}\r\n{{ item.name }}{% if item.description %}: {{ item.description }}{% endif %}\r\n{% if get_item_customization(0x12EB7).hasCustomName %}Using custom name{% endif %}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"mood-functions",children:"Mood Functions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"moodslist--array",children:"moodsList \u2192 array"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": List of all available mood types."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"array"})," \u2013 Array of mood strings"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{% for mood in moodsList %}{{ mood }}{% endfor %}\r\n{{ length(moodsList) }} moods available\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"mooddescriptions--object",children:"moodDescriptions \u2192 object"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Map of mood types to detailed descriptions."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"object"})," \u2013 Keys: mood names, Values: descriptions"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{{ moodDescriptions.happy }}\r\n{% for mood, desc in moodDescriptions %}{{ mood }}: {{ desc }}{% endfor %}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"mood_descriptionmood-string--string",children:"mood_description(mood: string) \u2192 string"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Get the description of a specific mood."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"mood"})," (",(0,s.jsx)(n.code,{children:"string"}),") \u2013 The mood name"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"string"})," \u2013 The mood\u2019s description"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{{ mood_description("happy") }}\r\nThe character feels {{ mood_description(currentMood) }}\r\n{% set moodDesc = mood_description(selectedMood) %}{{ moodDesc }}\r\n\r\n### Player Functions\r\n\r\n---\r\n\r\n### player \u2192 object\r\n\r\n**Description**: Provides comprehensive information about the current player character including UUID, name, race, level, and combat status.\r\n\r\n**Returns**: `object` \u2013 Player object containing `UUID`, `name`, `race`, `level`, and `isInCombat`\r\n\r\n**Examples**:\r\n```jinja\r\n{{ player.name }} is a level {{ player.level }} {{ player.race }}\r\n{% if player.isInCombat %}The player is fighting!{% endif %}\r\n{{ decnpc(player.UUID) }}\r\nPlayer UUID: {{ player.UUID }}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"player-variable",children:"player (variable)"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Type"}),": ",(0,s.jsx)(n.code,{children:"object"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Example value"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\r\n  "UUID": 1215163480972535445,\r\n  "isInCombat": false,\r\n  "level": 1,\r\n  "name": "Prisoner",\r\n  "race": "Nord"\r\n}\n'})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Used in"}),": ",(0,s.jsx)(n.code,{children:"web/bundled_base"}),", ",(0,s.jsx)(n.code,{children:"documentation/main"})," (15 times)"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"quest-functions",children:"Quest Functions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"get_all_active_quests--array",children:"get_all_active_quests \u2192 array"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Retrieves a list of all quests that are currently active in the player's quest log. Each quest includes ",(0,s.jsx)(n.code,{children:"formID"}),", ",(0,s.jsx)(n.code,{children:"editorID"}),", ",(0,s.jsx)(n.code,{children:"name"}),", and ",(0,s.jsx)(n.code,{children:"currentStage"}),". Uses caching for performance."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"array"})," \u2013 Array of quest objects"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{% for quest in get_all_active_quests() %}{{ quest.name }}: Stage {{ quest.currentStage }}{% endfor %}\r\n{% if length(get_all_active_quests()) > 5 %}You have many active quests!{% endif %}\r\n{{ length(get_all_active_quests()) }} active quests\r\n{% for quest in get_all_active_quests() %}\r\n  {% if quest.editorID == "MainQuest" %}Main quest found!{% endif %}\r\n{% endfor %}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"get_quest_stagequestidentifier-uint32_tstring-onlywhileactive-boolean--integer",children:"get_quest_stage(questIdentifier: uint32_t|string, onlyWhileActive?: boolean) \u2192 integer"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Gets the current stage of a quest by ",(0,s.jsx)(n.code,{children:"formID"})," or ",(0,s.jsx)(n.code,{children:"editorID"}),". Returns ",(0,s.jsx)(n.code,{children:"-1"})," if the quest is not found or not active (when ",(0,s.jsx)(n.code,{children:"onlyWhileActive"})," is ",(0,s.jsx)(n.code,{children:"true"}),")."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"questIdentifier"})," (",(0,s.jsx)(n.code,{children:"uint32_t|string"}),") \u2013 Quest ",(0,s.jsx)(n.code,{children:"formID"})," or ",(0,s.jsx)(n.code,{children:"editorID"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"onlyWhileActive"})," (",(0,s.jsx)(n.code,{children:"boolean"}),", optional) \u2013 Whether to limit to active quests"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"integer"})," \u2013 Current quest stage or ",(0,s.jsx)(n.code,{children:"-1"})," if not found"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{{ get_quest_stage(0x12345) }}\r\n{{ get_quest_stage("MainQuest") }}\r\n{{ get_quest_stage(questId, true) }}\r\n{% if get_quest_stage("DragonRising") >= 30 %}Quest progressed!{% endif %}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"is_quest_activequestidentifier-uint32_tstring--boolean",children:"is_quest_active(questIdentifier: uint32_t|string) \u2192 boolean"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Checks whether a quest is currently active in the player's quest log."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"questIdentifier"})," (",(0,s.jsx)(n.code,{children:"uint32_t|string"}),") \u2013 Quest ",(0,s.jsx)(n.code,{children:"formID"})," or ",(0,s.jsx)(n.code,{children:"editorID"})]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"boolean"})," \u2013 ",(0,s.jsx)(n.code,{children:"true"})," if active, ",(0,s.jsx)(n.code,{children:"false"})," otherwise"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{% if is_quest_active("MainQuest") %}Main quest is active!{% endif %}\r\n{{ is_quest_active(0x12345) }}\r\n{% for quest in questList %}\r\n  {% if is_quest_active(quest) %}{{ quest }}{% endif %}\r\n{% endfor %}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"scene-functions",children:"Scene Functions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"get_short_lived_events_count--integer",children:"get_short_lived_events_count \u2192 integer"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Returns the number of short-lived events currently active in the scene. Useful for quickly checking scene activity levels."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"integer"})," \u2013 Number of currently active events"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{{ get_short_lived_events_count() }} events happening\r\n{% if get_short_lived_events_count() > 5 %}Busy scene!{% endif %}\r\nEvent count: {{ get_short_lived_events_count() }}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"get_nearby_npc_listsourceuuid-uint64_t--array",children:"get_nearby_npc_list(sourceUUID: uint64_t) \u2192 array"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Gets a structured list of NPCs within interaction distance of the source entity."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sourceUUID"})," (",(0,s.jsx)(n.code,{children:"uint64_t"}),") \u2013 UUID of the entity to check around"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"array"})," \u2013 Array of nearby NPCs with UUID, name, distance, etc."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{% for npc in get_nearby_npc_list(player.UUID) %}{{ npc.name }}{% endfor %}\r\n{{ length(get_nearby_npc_list(player.UUID)) }} NPCs nearby\r\n{% set nearbyNPCs = get_nearby_npc_list(actorUUID) %}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"get_active_short_lived_events--array",children:"get_active_short_lived_events \u2192 array"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Retrieves all currently active short-lived events in the scene. Includes things like combat, dialogue, and environment changes."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"array"})," \u2013 List of active event objects"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{% for event in get_active_short_lived_events() %}{{ event.type }}{% endfor %}\r\n{{ length(get_active_short_lived_events()) }} active events\r\n{% if contains(get_active_short_lived_events(), "combat") %}Combat in progress!{% endif %}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"get_short_lived_events_by_typeeventtype-string--array",children:"get_short_lived_events_by_type(eventType: string) \u2192 array"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Gets all active events filtered by type, such as ",(0,s.jsx)(n.code,{children:'"combat"'}),", ",(0,s.jsx)(n.code,{children:'"dialogue"'}),", ",(0,s.jsx)(n.code,{children:'"movement"'}),", etc."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"eventType"})," (",(0,s.jsx)(n.code,{children:"string"}),") \u2013 Type of events to filter by"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"array"})," \u2013 Events of the specified type"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{{ length(get_short_lived_events_by_type("combat")) }} combat events\r\n{% for event in get_short_lived_events_by_type("dialogue") %}{{ event.timestamp }}{% endfor %}\r\n{% if get_short_lived_events_by_type("combat") %}Combat happening!{% endif %}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"get_short_lived_events_by_entityentityuuid-uint64_t--array",children:"get_short_lived_events_by_entity(entityUUID: uint64_t) \u2192 array"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Gets all short-lived events involving a specific entity (as actor or target)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"entityUUID"})," (",(0,s.jsx)(n.code,{children:"uint64_t"}),") \u2013 UUID of the entity"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"array"})," \u2013 Events involving the entity"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{% for event in get_short_lived_events_by_entity(player.UUID) %}{{ event.type }}{% endfor %}\r\n{{ length(get_short_lived_events_by_entity(actorUUID)) }} events for this actor\r\n{% if get_short_lived_events_by_entity(npc.UUID) %}This NPC is involved in events{% endif %}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"string-utility-functions",children:"String Utility Functions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"joinarray-array-separator-string--string",children:"join(array: array, separator: string) \u2192 string"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Joins elements of an array into a single string using a separator."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"array"})," (",(0,s.jsx)(n.code,{children:"array"}),") \u2013 Elements to join"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"separator"})," (",(0,s.jsx)(n.code,{children:"string"}),") \u2013 String to insert between items"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"string"})," \u2013 Joined string"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{{ join(fruits, ", ") }}\r\n{{ join(["hello", "world"], " ") }}\r\n{{ join(actor.faction, " | ") }}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"lengthvalue-arraystring--integer",children:"length(value: array|string) \u2192 integer"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Gets the size of an array or length of a string. Returns ",(0,s.jsx)(n.code,{children:"-1"})," for unsupported types."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"value"})," (",(0,s.jsx)(n.code,{children:"array|string"}),") \u2013 Value to measure"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"integer"})," \u2013 Element count or character length"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{{ length(actor.faction) }}\r\n{{ length("Hello World") }}\r\n{{ length(recentEvents) }}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"lowertext-string--string",children:"lower(text: string) \u2192 string"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Converts a string to lowercase."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"text"})," (",(0,s.jsx)(n.code,{children:"string"}),") \u2013 The string to convert"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"string"})," \u2013 Lowercased string"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{{ lower(actor.name) }}\r\n{{ lower("HELLO WORLD") }}\r\n{{ lower(location.name) }}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"containscontainer-arraystring-searchvalue-string--boolean",children:"contains(container: array|string, searchValue: string) \u2192 boolean"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Checks if an array contains a value or if a string contains a substring (case-insensitive)."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"container"})," (",(0,s.jsx)(n.code,{children:"array|string"}),") \u2013 Array or string to search"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"searchValue"})," (",(0,s.jsx)(n.code,{children:"string"}),") \u2013 Value to find"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"boolean"})," \u2013 ",(0,s.jsx)(n.code,{children:"true"})," if found"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{{ contains(recentEvents, "combat") }}\r\n{{ contains(actor.name, "Guard") }}\r\n{{ contains(["apple", "banana"], "APPLE") }}\r\n{{ contains(stringArray, "search") }}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"to_numbertext-string--number",children:"to_number(text: string) \u2192 number"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Converts a string to a number. Returns ",(0,s.jsx)(n.code,{children:"0"})," if it fails."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"text"})," (",(0,s.jsx)(n.code,{children:"string"}),") \u2013 String to convert"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"number"})," \u2013 Resulting number"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{{ to_number("123") }}\r\n{{ to_number("45.67") }}\r\n{{ to_number(actor.level) }}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"is_arrayvalue-any--boolean",children:"is_array(value: any) \u2192 boolean"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Checks if a given value is an array."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"value"})," (",(0,s.jsx)(n.code,{children:"any"}),") \u2013 Value to check"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"boolean"})," \u2013 ",(0,s.jsx)(n.code,{children:"true"})," if array"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'{{ is_array(recentEvents) }}\r\n{{ is_array(actor.faction) }}\r\n{{ is_array("hello") }}\r\n{{ is_array([1, 2, 3]) }}\n'})}),"\n",(0,s.jsx)(n.h3,{id:"world-functions",children:"World Functions"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"currenttime--string",children:"currentTime \u2192 string"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Returns the current system time in ISO format (",(0,s.jsx)(n.code,{children:"YYYY-MM-DD HH:MM:SSZ"}),"). Useful for timestamping events, logs, or scheduling."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"string"})," \u2013 Current time in ISO format"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"Current time: {{ currentTime }}\r\nEvent logged at {{ currentTime }}\r\n{{ short_time(currentTime) }}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"gametime--string",children:"gameTime \u2192 string"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Returns the in-game Skyrim time as a formatted string, like ",(0,s.jsx)(n.code,{children:"8:30 AM, Morndas, 17th of Last Seed, 4E 201"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"string"})," \u2013 Current in-game time"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"Current game time: {{ gameTime }}\r\nThe time in Skyrim is {{ gameTime }}\r\n{{ short_time(gameTime) }}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"location--string",children:"location \u2192 string"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Returns the name of the player\u2019s current in-game location."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"string"})," \u2013 Name of current location"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:'You are currently in {{ location }}\r\n{% if location == "Whiterun" %}Welcome to the capital!{% endif %}\r\nThe current location is {{ location }}\n'})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"gametimejson--object",children:"gameTimeJson \u2192 object"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Returns structured in-game time details such as hour, day, month, year, and formatted names."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"object"})," \u2013 Structured time object with all components"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{% if gameTimeJson.hour >= 20 %}It's late evening{% endif %}\r\nToday is {{ gameTimeJson.weekdayName }}, {{ gameTimeJson.dayOrdinal }} of {{ gameTimeJson.monthName }}\r\nThe time is {{ gameTimeJson.displayHour }}:{{ '%02d'|format(gameTimeJson.minute) }} {{ gameTimeJson.ampm }}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"short_timetimestring-string--string",children:"short_time(timeString: string) \u2192 string"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Description"}),": Formats a full time string (ISO or game time) into a shorter, human-friendly display string."]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Arguments"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"timeString"})," (",(0,s.jsx)(n.code,{children:"string"}),") \u2013 Full time string to shorten"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Returns"}),": ",(0,s.jsx)(n.code,{children:"string"})," \u2013 Formatted short time string"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Examples"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{{ short_time(currentTime) }}\r\n{% set briefTime = short_time(gameTime) %}{{ briefTime }}\r\nTime: {{ short_time(eventTimestamp) }}\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h3,{id:"variables",children:"Variables"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"timestamp--integer",children:"timestamp \u2192 integer"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{{ timestamp }} \u2192 1751897919\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.em,{children:["Used 3 times in template: ",(0,s.jsx)(n.code,{children:"web/bundled_base"})]})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h4,{id:"location--string-1",children:"location \u2192 string"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-jinja",children:"{{ location }} \u2192 Unknown\n"})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>o});var i=r(6540);const s={},t=i.createContext(s);function c(e){const n=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);