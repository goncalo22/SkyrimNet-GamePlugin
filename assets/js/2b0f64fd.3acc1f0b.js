"use strict";(self.webpackChunkskyrimnet_docs=self.webpackChunkskyrimnet_docs||[]).push([[5665],{1208:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>d,metadata:()=>t,toc:()=>o});const t=JSON.parse('{"id":"Features/events-and-reactions","title":"Events and Reactions","description":"SkyrimNet\u2019s event system enables dynamic memory, LLM-based dialogue, and NPC reactivity by processing structured in-game events. These events act as the core data stream that drives memory formation, conversation context, and AI behavior.","source":"@site/docs/Features/Events and Reactions.md","sourceDirName":"Features","slug":"/Features/events-and-reactions","permalink":"/SkyrimNet-GamePlugin/Features/events-and-reactions","draft":false,"unlisted":false,"editUrl":"https://github.com/goncalo22/SkyrimNet-GamePlugin/edit/main/docs/docs/Features/Events and Reactions.md","tags":[],"version":"current","frontMatter":{"id":"events-and-reactions","title":"Events and Reactions","displayed_sidebar":"tutorialSidebar"},"sidebar":"tutorialSidebar","previous":{"title":"Overview","permalink":"/SkyrimNet-GamePlugin/Features/overview"},"next":{"title":"GameMaster","permalink":"/SkyrimNet-GamePlugin/Features/gamemaster"}}');var r=s(4848),i=s(8453);const d={id:"events-and-reactions",title:"Events and Reactions",displayed_sidebar:"tutorialSidebar"},l="Event & Reaction System",c={},o=[{value:"\ud83e\udde0 Core Concepts",id:"-core-concepts",level:2},{value:"1. Events",id:"1-events",level:3},{value:"2. Dialogue Context History",id:"2-dialogue-context-history",level:3},{value:"3. Preloaded Event Memory",id:"3-preloaded-event-memory",level:3},{value:"\ud83e\udde0 How Events Influence Memory &amp; Dialogue",id:"-how-events-influence-memory--dialogue",level:2},{value:"\ud83d\udcac NPC Reactions Overview",id:"-npc-reactions-overview",level:2},{value:"Example Use Cases:",id:"example-use-cases",level:3},{value:"\ud83e\uddea Event Type Tiers \u2013 Recommendation Matrix",id:"-event-type-tiers--recommendation-matrix",level:2},{value:"\ud83d\ude80 Usage Strategy Summary",id:"-usage-strategy-summary",level:2},{value:"\u2705 For Immersive Memory and Dialogue",id:"-for-immersive-memory-and-dialogue",level:3},{value:"\u2705 For NPC Interactivity",id:"-for-npc-interactivity",level:3},{value:"\u2705 For Performance Balance",id:"-for-performance-balance",level:3}];function a(e){const n={blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"event--reaction-system",children:"Event & Reaction System"})}),"\n",(0,r.jsxs)(n.p,{children:["SkyrimNet\u2019s event system enables ",(0,r.jsx)(n.strong,{children:"dynamic memory"}),", ",(0,r.jsx)(n.strong,{children:"LLM-based dialogue"}),", and ",(0,r.jsx)(n.strong,{children:"NPC reactivity"})," by processing structured in-game events. These events act as the core data stream that drives memory formation, conversation context, and AI behavior."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-core-concepts",children:"\ud83e\udde0 Core Concepts"}),"\n",(0,r.jsx)(n.h3,{id:"1-events",children:"1. Events"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Definition:"})," Structured records representing player or NPC actions (e.g., combat, dialogue, spell casting)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Per Event Type Settings:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Enabled"}),": If unchecked, event is ignored."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Persistent"}),": If checked, event is logged to the memory database."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"Allow NPC Reaction"}),": Enables live NPC responses."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"NPC Reaction Cooldown"}),": Time in seconds before another reaction to the same type."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-dialogue-context-history",children:"2. Dialogue Context History"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Setting:"})," ",(0,r.jsx)(n.code,{children:"Event History Count \u2013 Dialogue"})]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Default:"})," 50 (range: 5\u2013200)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose:"})," Controls how many past events are passed to the LLM during dialogue generation."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-preloaded-event-memory",children:"3. Preloaded Event Memory"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Setting:"})," ",(0,r.jsx)(n.code,{children:"Event Preload Count"})," (e.g., 1000)"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Range:"})," 500\u20138000"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose:"})," Number of past events preloaded on game start to prime memory and context."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-how-events-influence-memory--dialogue",children:"\ud83e\udde0 How Events Influence Memory & Dialogue"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Feature"}),(0,r.jsx)(n.th,{children:"Uses Events"}),(0,r.jsx)(n.th,{children:"Needs Persistence"}),(0,r.jsx)(n.th,{children:"Affected by Cooldowns"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"LLM Dialogue Context"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"\u274c No"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Memory Recall / Reflection"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"\u274c No"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"NPC Live Reactions"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"\u274c No"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Event Logging / Debugging"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"\u2705 Yes"}),(0,r.jsx)(n.td,{children:"\u274c No"})]})]})]}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\u2705 Best practice: Events you want remembered or reacted to should be ",(0,r.jsx)(n.code,{children:"Enabled"}),", ",(0,r.jsx)(n.code,{children:"Persistent"}),", and have ",(0,r.jsx)(n.code,{children:"Allow NPC Reaction"})," set appropriately."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-npc-reactions-overview",children:"\ud83d\udcac NPC Reactions Overview"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"What They Are:"})," Real-time dialogue or behavior responses triggered by in-game events."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Cooldowns:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Global Cooldown:"})," Minimum delay between ",(0,r.jsx)(n.em,{children:"any"})," reactions (e.g., 60s)."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Per-Event Cooldown:"})," Delay between reacting to the ",(0,r.jsx)(n.em,{children:"same"})," event type (e.g., 180s for combat)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"example-use-cases",children:"Example Use Cases:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["NPC comments on spell casting (",(0,r.jsx)(n.code,{children:"spell_cast"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["NPC notices player looting a container (",(0,r.jsx)(n.code,{children:"container_changed"}),")"]}),"\n",(0,r.jsxs)(n.li,{children:["NPC reacts to combat or death (",(0,r.jsx)(n.code,{children:"combat"}),", ",(0,r.jsx)(n.code,{children:"death"}),")"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-event-type-tiers--recommendation-matrix",children:"\ud83e\uddea Event Type Tiers \u2013 Recommendation Matrix"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Event Type"}),(0,r.jsx)(n.th,{children:"Enable"}),(0,r.jsx)(n.th,{children:"Persist"}),(0,r.jsx)(n.th,{children:"NPC React"}),(0,r.jsx)(n.th,{children:"Cooldown"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"combat"}),", ",(0,r.jsx)(n.code,{children:"death"})]}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"120\u2013180s"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"activation"}),", ",(0,r.jsx)(n.code,{children:"equip"})]}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"30\u201360s"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"book_read"}),", ",(0,r.jsx)(n.code,{children:"container_changed"})]}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"60s"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"spell_cast"})}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"60\u201390s"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"dialogue_*"}),", ",(0,r.jsx)(n.code,{children:"scene_*"})]}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"direct_narration"}),", ",(0,r.jsx)(n.code,{children:"continue_narration"})]}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"0"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"custom"}),", ",(0,r.jsx)(n.code,{children:"gamemaster_dialogue"}),", ",(0,r.jsx)(n.code,{children:"player_thoughts"})]}),(0,r.jsx)(n.td,{children:"\u2705"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"\u274c"}),(0,r.jsx)(n.td,{children:"0"})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-usage-strategy-summary",children:"\ud83d\ude80 Usage Strategy Summary"}),"\n",(0,r.jsx)(n.h3,{id:"-for-immersive-memory-and-dialogue",children:"\u2705 For Immersive Memory and Dialogue"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Set ",(0,r.jsx)(n.code,{children:"Persistent = true"})," for all important events."]}),"\n",(0,r.jsxs)(n.li,{children:["Adjust ",(0,r.jsx)(n.code,{children:"Event History Count"})," (50\u2013100) for context depth."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-for-npc-interactivity",children:"\u2705 For NPC Interactivity"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Enable ",(0,r.jsx)(n.code,{children:"Allow NPC Reaction"})," for immersive actions (combat, lockpicking, spell casting)."]}),"\n",(0,r.jsx)(n.li,{children:"Use custom cooldowns to avoid spammy chatter."}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"-for-performance-balance",children:"\u2705 For Performance Balance"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Use a ",(0,r.jsx)(n.code,{children:"Preload Count"})," of 1000\u20133000 for good memory retention without overloading startup."]}),"\n",(0,r.jsx)(n.li,{children:"Avoid enabling reactions on every event \u2014 pick impactful ones."}),"\n"]}),"\n",(0,r.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>l});var t=s(6540);const r={},i=t.createContext(r);function d(e){const n=t.useContext(i);return t.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);