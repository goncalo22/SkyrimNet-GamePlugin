"use strict";(self.webpackChunkskyrimnet_docs=self.webpackChunkskyrimnet_docs||[]).push([[2804],{3883:(r,n,e)=>{e.r(n),e.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"Skyrimnet API/library","title":"Library","description":"","source":"@site/docs/Skyrimnet API/Library.md","sourceDirName":"Skyrimnet API","slug":"/Skyrimnet API/library","permalink":"/SkyrimNet-GamePlugin/Skyrimnet API/library","draft":false,"unlisted":false,"editUrl":"https://github.com/goncalo22/SkyrimNet-GamePlugin/edit/main/docs/Skyrimnet API/Library.md","tags":[],"version":"current","frontMatter":{"id":"library","title":"Library","displayed_sidebar":"apiSidebar"},"sidebar":"apiSidebar","previous":{"title":"API","permalink":"/SkyrimNet-GamePlugin/Skyrimnet API/api"},"next":{"title":"Decorators","permalink":"/SkyrimNet-GamePlugin/Skyrimnet API/decorators"}}');var i=e(4848),o=e(8453);const a={id:"library",title:"Library",displayed_sidebar:"apiSidebar"},l=void 0,s={},c=[];function g(r){const n={code:"code",pre:"pre",...(0,o.R)(),...r.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-Scriptname",metastring:"skynet_Library extends Quest  ",children:'\r\nskynet_MainController Property skynet Auto Hidden\r\n\r\n; -----------------------------------------------------------------------------\r\n; --- The Library Part of the Library ---\r\n; -----------------------------------------------------------------------------\r\nFaction Property factionMerchants Auto\r\nFaction Property factionInnkeepers Auto\r\nFaction Property factionStewards Auto\r\nFaction Property factionPlayerFollowers Auto\r\n\r\nFaction Property factionRentRoom Auto\r\n\r\nQuest Property questDialogueGeneric Auto\r\nQuest Property questBountyBandits Auto\r\n\r\nGlobalVariable Property globalRentRoomPrice Auto\r\n\r\nKeyword Property keywordDialogueTarget Auto\r\nKeyword Property keywordFollowTarget Auto\r\n\r\nPackage Property packageDialoguePlayer Auto\r\nPackage Property packageDialogueNPC Auto\r\nPackage Property packageFollowPlayer Auto\r\n\r\nIdle Property IdleApplaud2 Auto\r\nIdle Property IdleApplaud3 Auto\r\nIdle Property IdleApplaud4 Auto\r\nIdle Property IdleApplaud5 Auto\r\nIdle Property IdleApplaudSarcastic Auto\r\nIdle Property IdleBook_Reading Auto\r\nIdle Property IdleDrink Auto\r\nIdle Property IdleDrinkPotion Auto\r\nIdle Property IdleEatSoup Auto\r\nIdle Property IdleExamine Auto\r\nIdle Property IdleForceDefaultState Auto\r\nIdle Property IdleLaugh Auto\r\nIdle Property IdleNervous Auto\r\nIdle Property IdleNoteRead Auto\r\nIdle Property IdlePointClose Auto\r\nIdle Property IdlePray Auto\r\nIdle Property IdleSalute Auto\r\nIdle Property IdleSnapToAttention Auto\r\nIdle Property IdleStudy Auto\r\nIdle Property IdleWave Auto\r\nIdle Property IdleWipeBrow Auto\r\n\r\nMiscObject Property miscGold Auto\r\n\r\nMessage Property msgClearHistory Auto\r\n\r\n; -----------------------------------------------------------------------------\r\n; --- Version & Maintenance ---\r\n; -----------------------------------------------------------------------------\r\n\r\nFunction Maintenance(skynet_MainController _skynet)\r\n    skynet = _skynet\r\n    RegisterActions()\r\n    InitVRIntegrations()\r\n    skynet.Info("Library initialized")\r\nEndFunction\r\n\r\nFunction RegisterActions()\r\n    if !RegisterTags()\r\n        skynet.Fatal("Tags failed to register.")\r\n        return\r\n    endif\r\n\r\n    if !RegisterBasicActions()\r\n        skynet.Fatal("Basic actions failed to register.")\r\n        return\r\n    endif\r\n\r\n    if !RegisterAnimationActions()\r\n        skynet.Fatal("Animation actions failed to register.")\r\n        return\r\n    endif\r\n\r\n    if !RegisterCompanionActions()\r\n        skynet.Fatal("Companion actions failed to register.")\r\n        return\r\n    endif\r\n\r\n    if !RegisterTavernActions()\r\n        skynet.Fatal("Tavern actions failed to register.")\r\n        return\r\n    endif\r\n\r\n    ; DEBUG ONLY\r\n    ; debug.notification("Actions registered.")\r\nEndFunction\r\n\r\n; -----------------------------------------------------------------------------\r\n; --- Skynet Package Parsing ---\r\n; -----------------------------------------------------------------------------\r\n\r\nPackage Function GetPackageFromString(String asPackage)\r\n    if asPackage == "TalkToPlayer"\r\n        return packageDialoguePlayer\r\n    elseif asPackage == "TalkToNPC"\r\n        return packageDialogueNPC\r\n    elseif asPackage == "FollowPlayer"\r\n        return packageFollowPlayer\r\n    endif\r\n    return None\r\nEndFunction\r\n\r\nFunction ApplyPackageOverrideToActor(Actor akActor, String asString, Int priority = 1, Int flags = 0)\r\n    Package _pck = GetPackageFromString(asString)\r\n    if !_pck\r\n        skynet.Error("Could not retrieve package for: " + asString)\r\n        return\r\n    endif\r\n    skynet.Info("Applying package override " + asString + " to " + akActor.GetDisplayName())\r\n    ActorUtil.AddPackageOverride(akActor, _pck, priority, flags)\r\n    akActor.EvaluatePackage()\r\n    DispatchPackageAddedEvent(akActor, _pck, asString)\r\n    skynet.Info("Dispatched package remove event for " + akActor.GetDisplayName() + " with package " + asString)\r\nEndFunction\r\n\r\nFunction RemovePackageOverrideFromActor(Actor akActor, String asString)\r\n    Package _pck = GetPackageFromString(asString)\r\n    if !_pck\r\n        skynet.Error("Could not retrieve package for: " + asString)\r\n        return\r\n    endif\r\n    skynet.Info("Removing package override " + asString + " from " + akActor.GetDisplayName())\r\n    ActorUtil.RemovePackageOverride(akActor, _pck)\r\n    akActor.EvaluatePackage()\r\n    DispatchPackageRemovedEvent(akActor, _pck, asString)\r\n    skynet.Info("Dispatched package remove event for " + akActor.GetDisplayName() + " with package " + asString)\r\nEndFunction\r\n\r\n; -----------------------------------------------------------------------------\r\n; --- Skynet Papyrus Actions ---\r\n; -----------------------------------------------------------------------------\r\n\r\nBool Function RegisterBasicActions()\r\n    SkyrimNetApi.RegisterAction("OpenTrade", "Use ONLY if {{ player.name }} asks to trade and you agree to trade. Otherwise, you MUST NOT use this action.", \\\r\n                                "SkyrimNetInternal", "OpenTrade_IsEligible", \\\r\n                                "SkyrimNetInternal", "OpenTrade_Execute", \\\r\n                                "", "PAPYRUS", \\\r\n                                1, "")\r\n\r\n    SkyrimNetApi.RegisterAction("AccompanyTarget", "Start accompanying {{ player.name }}. Only use this when you are sure that you want to stop what you\'re doing and follow {{ player.name }} to another location, and {{ player.name }} has specifically requested it.", \\\r\n                                "SkyrimNetInternal", "StartFollow_IsEligible", \\\r\n                                "SkyrimNetInternal", "StartFollow_Execute", \\\r\n                                "", "PAPYRUS", \\\r\n                                1, "")\r\n\r\n    SkyrimNetApi.RegisterAction("StopAccompanying", "Stop accompanying {{ player.name }}. Use this when you are done accompanying them, or want to go home.", \\\r\n                                "SkyrimNetInternal", "StopFollow_IsEligible", \\\r\n                                "SkyrimNetInternal", "StopFollow_Execute", \\\r\n                                "", "PAPYRUS", \\\r\n                                1, "")\r\n\r\n    SkyrimNetApi.RegisterAction("WaitHere", "Wait for {{ player.name }} at the current location temporarily. Only use this when {{ player.name }} has specifically requested it.", \\\r\n                                "SkyrimNetInternal", "PauseFollow_IsEligible", \\\r\n                                "SkyrimNetInternal", "PauseFollow_Execute", \\\r\n                                "", "PAPYRUS", \\\r\n                                1, "")\r\n    return true\r\nEndFunction\r\n\r\n; we reoute stuff here if it has properties we can use so we\'re not in the global anymore\r\nBool Function OpenTrade_IsEligible(Actor akActor, string contextJson, string paramsJson)\r\n    if akActor.GetFactionRank(factionMerchants) == -2\r\n        return false\r\n    endif\r\n    return true\r\nEndFunction\r\n\r\nBool Function RegisterTavernActions()\r\n    SkyrimNetApi.RegisterAction("RentRoom", "Rent a room out to {{ player.name }} for an amount of gold, but only if they agreed to the price beforehand", \\\r\n                                "SkyrimNetInternal", "RentRoom_IsEligible", \\\r\n                                "SkyrimNetInternal", "RentRoom_Execute", \\\r\n                                "", "PAPYRUS", \\\r\n                                1, "{\\"price\\": \\"Int\\"}")\r\n\r\n    ; SkyrimNetApi.RegisterAction("GiveBanditBounty", "Hand {{ player.name }} a bounty poster for a bounty on a bandit leader by the local jarl", \\\r\n    ;                             "SkyrimNetInternal", "GiveBanditBounty_IsEligible", \\\r\n    ;                             "SkyrimNetInternal", "GiveBanditBounty_Execute", \\\r\n    ;                             "", "PAPYRUS", \\\r\n    ;                             1, "")\r\n\r\n    return True\r\nEndFunction\r\n\r\nBool Function RentRoom_IsEligible(Actor akActor)\r\n    if !akActor.IsInFaction(factionRentRoom) || akActor.GetActorValue("Variable09") > 0\r\n        return false\r\n    EndIf\r\n\r\n    if !(akActor as RentRoomScript)\r\n        return false\r\n    endif\r\n\r\n    return true\r\nEndFunction\r\n\r\nFunction RentRoom_Execute(Actor akActor, string paramsJson)\r\n    DialogueGenericScript _dqs = (questDialogueGeneric as DialogueGenericScript)\r\n\r\n    if (!(akActor as RentRoomScript)) || (!_dqs)\r\n        return\r\n    endif\r\n\r\n    Int price = SkyrimNetApi.GetJsonInt(paramsJson, "price", Math.Floor(globalRentRoomPrice.GetValue()))\r\n    if skynet.playerRef.GetItemCount(miscGold) < price\r\n        SkyrimNetApi.DirectNarration("*{{ decnpc(npc.UUID).name }} complains to {{ player.name }} about offering what they can\'t pay*", akActor, Game.GetPlayer())\r\n        return\r\n    EndIf\r\n\r\n    skynet.playerRef.RemoveItem(miscGold, price)\r\n    (akActor as RentRoomScript).RentRoom(_dqs)\r\n    return\r\nEndFunction\r\n\r\n; Bool Function GiveBanditBounty_IsEligible(Actor akActor)\r\n;     if (!akActor.IsInFaction(factionInnkeepers) && !akActor.IsInFaction(factionStewards)) || questBountyBandits.GetStageDone(10)\r\n;         return false\r\n;     EndIf\r\n\r\n;     return true\r\n; EndFunction\r\n\r\n; Function GiveBanditBounty_Execute(Actor akActor)\r\n;     questBountyBandits.SetStage(10)\r\n;     return\r\n; EndFunction\r\n\r\n\r\nBool Function RegisterAnimationActions()\r\n    SkyrimNetApi.RegisterAction("SlapTarget", "Slap the target.", \\\r\n                                "SkyrimNetInternal", "Animation_IsEligible", \\\r\n                                "SkyrimNetInternal", "AnimationSlapActor", \\\r\n                                "", "PAPYRUS", \\\r\n                                1, "{\\"target\\": \\"Actor\\"}")\r\n\r\n    SkyrimNetApi.RegisterAction("Gesture", "Perform a gesture to emphasize your words.", \\\r\n                                "SkyrimNetInternal", "Animation_IsEligible", \\\r\n                                "SkyrimNetInternal", "AnimationGeneric", \\\r\n                                "", "PAPYRUS", \\\r\n                                1, "{ \\"anim\\": \\"applaud|applaud_sarcastic|drink|drink_potion|eat|laugh|nervous|read_note|pray|salute|study|wave|wipe_brow\\" }")\r\n\r\n    return True\r\nEndFunction\r\n\r\n; ag12: I hate this. Why didn\'t Bethesda give us Lua instead of Papyrus? Fuck you, Todd.\r\nFunction PlayGenericAnimation(Actor akActor, String anim)\r\n    Idle _idle\r\n    Debug.Trace("Playing animation: " + anim + " for " + akActor.GetDisplayName())\r\n    If anim == "applaud"\r\n        int rnd = Utility.RandomInt(0,3)\r\n        if rnd == 0\r\n            _idle = IdleApplaud2\r\n        elseif rnd == 1\r\n            _idle = IdleApplaud3\r\n        elseif rnd == 2\r\n            _idle = IdleApplaud4\r\n        elseif rnd == 3\r\n            _idle = IdleApplaud5\r\n        EndIf\r\n    ElseIf anim == "applaud_sarcastic"\r\n        _idle = IdleApplaudSarcastic\r\n    Elseif anim == "read_book"\r\n        _idle = IdleBook_Reading\r\n    Elseif anim == "drink"\r\n        _idle = IdleDrink\r\n    Elseif anim == "drink_potion"\r\n        _idle = IdleDrinkPotion\r\n    Elseif anim == "eat"\r\n        _idle = IdleEatSoup\r\n    Elseif anim == "laugh"\r\n        _idle = IdleLaugh\r\n    Elseif anim == "nervous"\r\n        _idle = IdleNervous\r\n    Elseif anim == "read_note"\r\n        _idle = IdleNoteRead\r\n    Elseif anim == "pray"\r\n        _idle = IdlePray\r\n    Elseif anim == "salute"\r\n        _idle = IdleSalute\r\n    Elseif anim == "study"\r\n        _idle = IdleStudy\r\n    Elseif anim == "wave"\r\n        _idle = IdleWave\r\n    Elseif anim == "wipe_brow"\r\n        _idle = IdleWipeBrow\r\n    endif\r\n\r\n    if !_idle\r\n        skynet.Error("Could not parse animation string for generic animation: " + anim)\r\n        Return\r\n    endif\r\n\r\n    akActor.PlayIdle(IdleForceDefaultState)\r\n    utility.wait(2)\r\n    ; debug.notification("Playing animation: " + anim + " for " + akActor.GetDisplayName())\r\n    akActor.PlayIdle(_idle)\r\nEndFunction\r\n\r\nBool Function RegisterCompanionActions()\r\n    SkyrimNetApi.RegisterAction("CompanionFollow", "Start following {{ player.name }}.", \\\r\n                                "SkyrimNetInternal", "CompanionFollow_IsEligible", \\\r\n                                "SkyrimNetInternal", "CompanionFollow", \\\r\n                                "", "PAPYRUS", \\\r\n                                1, "", "", "follower")\r\n\r\n    SkyrimNetApi.RegisterAction("CompanionWait", "Wait at this location", \\\r\n                                "SkyrimNetInternal", "CompanionWait_IsEligible", \\\r\n                                "SkyrimNetInternal", "CompanionWait", \\\r\n                                "", "PAPYRUS", \\\r\n                                1, "", "", "follower")\r\n\r\n    SkyrimNetApi.RegisterAction("CompanionInventory", "Give {{ player.name }} access to your inventory", \\\r\n                                "SkyrimNetInternal", "Companion_IsEligible", \\\r\n                                "SkyrimNetInternal", "CompanionInventory", \\\r\n                                "", "PAPYRUS", \\\r\n                                1, "", "", "follower")\r\n\r\n    SkyrimNetApi.RegisterAction("CompanionGiveTask", "Let {{ player.name }} designate a task for you", \\\r\n                                "SkyrimNetInternal", "CompanionGiveTask_IsEligible", \\\r\n                                "SkyrimNetInternal", "CompanionGiveTask", \\\r\n                                "", "PAPYRUS", \\\r\n                                1, "", "", "follower")\r\n\r\n    return true\r\nEndFunction\r\n\r\nBool Function StartFollow_IsEligible(Actor akActor)\r\n    if SkyrimNetApi.HasPackage(akActor, "FollowPlayer") && akActor.GetAV("WaitingForPlayer") == 0\r\n        return false\r\n    endif\r\n\r\n    Faction factionCompanion = Game.GetFormFromFile(0x084D1B, "Skyrim.esm") as Faction\r\n    if (!factionCompanion)\r\n        Debug.Trace("[SkyrimNetInternal] StartFollow_IsEligible: factionCompanion is null")\r\n        return true\r\n    endif\r\n\r\n    if akActor.IsInFaction(factionCompanion)\r\n        Debug.Trace("[SkyrimNetInternal] StartFollow_IsEligible: " + akActor.GetDisplayName() + " is in the companion faction.")\r\n        return false\r\n    endif\r\n    return true\r\n\r\nEndFunction\r\n\r\nBool Function StopFollow_IsEligible(Actor akActor)\r\n    if akActor.IsInFaction(factionPlayerFollowers)\r\n        return false\r\n    endif\r\n\r\n    if !SkyrimNetApi.HasPackage(akActor, "FollowPlayer")\r\n        return false\r\n    endif\r\n\r\n    return true\r\nEndFunction\r\n\r\nBool Function PauseFollow_IsEligible(Actor akActor)\r\n    if akActor.IsInFaction(factionPlayerFollowers)\r\n        return false\r\n    endif\r\n\r\n    if !SkyrimNetApi.HasPackage(akActor, "FollowPlayer")\r\n        return false\r\n    endif\r\n\r\n    if akActor.GetAV("WaitingForPlayer") > 0\r\n        return false\r\n    endif\r\n\r\n    return true\r\nEndFunction\r\n\r\nFunction StartFollow_Execute(Actor akActor)\r\n    debug.notification(akActor.GetDisplayName() + " is now accompanying you.")\r\n\r\n    akActor.SetAV("WaitingForPlayer", 0)\r\n\r\n    SkyrimNetApi.RegisterPackage(akActor, "FollowPlayer", 10, 0, true)\r\n\r\n    akActor.EvaluatePackage()\r\nEndFunction\r\n\r\nFunction StopFollow_Execute(Actor akActor)    \r\n    debug.notification(akActor.GetDisplayName() + " is no longer accompanying you.")\r\n\r\n    SkyrimNetApi.UnregisterPackage(akActor, "FollowPlayer")\r\n\r\n    akActor.EvaluatePackage()\r\nEndFunction\r\n\r\nFunction PauseFollow_Execute(Actor akActor)\r\n    debug.notification(akActor.GetDisplayName() + " is waiting for you here.")\r\n\r\n    akActor.SetAV("WaitingForPlayer", 1)\r\n\r\n    akActor.EvaluatePackage()\r\nEndFunction\r\n\r\n; -----------------------------------------------------------------------------\r\n; --- Skynet Tag Registration ---\r\n; -----------------------------------------------------------------------------\r\n\r\nBool Function RegisterTags()\r\n    SkyrimNetApi.RegisterTag("follower", "SkyrimNetInternal", "Follower_IsEligible")\r\n    return true\r\nEndFunction\r\n\r\n\r\n; -----------------------------------------------------------------------------\r\n; --- Event Dispatchers\r\n; -----------------------------------------------------------------------------\r\n\r\nFunction DispatchPackageAddedEvent(Actor akActor, Package pkg, String packageName)\r\n int handle = ModEvent.Create("SkyrimNet_OnPackageAdded")\r\n  if handle\r\n    modEvent.PushForm(handle,akActor)\r\n    modEvent.PushForm(handle,pkg)\r\n    modEvent.PushString(handle, packageName)\r\n    modEvent.Send(handle)\r\nendif\r\nEndFunction\r\n\r\nFunction DispatchPackageRemovedEvent(Actor akActor, Package pkg, String packageName)\r\n int handle = ModEvent.Create("SkyrimNet_OnPackageRemoved")\r\n  if handle\r\n    modEvent.PushForm(handle,akActor)\r\n    modEvent.PushForm(handle,pkg)\r\n    modEvent.PushString(handle, packageName)\r\n    modEvent.Send(handle)\r\nendif\r\nEndFunction\r\n\r\n; -----------------------------------------------------------------------------\r\n; ---- VRIK Integration ----\r\n; -----------------------------------------------------------------------------\r\n  \r\nFunction InitVRIntegrations()\r\n    if !SkyrimNetApi.IsRunningVR()\r\n        skynet.Info("Not running VR, disabling VR Integrations")\r\n        return\r\n    endif\r\n    if Game.GetModByName("vrik.esp") == 255\r\n        skynet.Info("VRIK not installed, disabling VRIK Integrations")\r\n        return\r\n    endif\r\n    skynet.Info("Using VRIK Integrations")\r\n\r\n  \r\n    RegisterForModEvent("skynet_vrik_continue_narration", "OnVrikContinueNarration")\r\n    VRIK.VrikAddGestureAction("skynet_vrik_continue_narration", "SkyrimNet: Continue Narration")\r\n  \r\n    RegisterForModEvent("skynet_vrik_toggle_gamemaster", "OnVrikToggleGameMaster")\r\n    VRIK.VrikAddGestureAction("skynet_vrik_toggle_gamemaster", "SkyrimNet: Toggle GameMaster")\r\n  \r\n    RegisterForModEvent("skynet_vrik_trigger_voice_input", "OnVrikTriggerVoiceInput")\r\n    VRIK.VrikAddGestureAction("skynet_vrik_trigger_voice_input", "SkyrimNet: Start Voice Input")\r\n  \r\n    RegisterForModEvent("skynet_vrik_trigger_voice_release", "OnVrikTriggerVoiceRelease")\r\n    VRIK.VrikAddGestureAction("skynet_vrik_trigger_voice_release", "SkyrimNet: Stop Voice Input")\r\n  \r\n    RegisterForModEvent("skynet_vrik_trigger_direct_input", "OnVrikTriggerDirectInput")\r\n    VRIK.VrikAddGestureAction("skynet_vrik_trigger_direct_input", "SkyrimNet: Start Direct Input")\r\n  \r\n    RegisterForModEvent("skynet_vrik_trigger_direct_release", "OnVrikTriggerDirectRelease")\r\n    VRIK.VrikAddGestureAction("skynet_vrik_trigger_direct_release", "SkyrimNet: Stop Direct Input")\r\n  \r\n    RegisterForModEvent("skynet_vrik_trigger_player_thought", "OnVrikTriggerPlayerThought")\r\n    VRIK.VrikAddGestureAction("skynet_vrik_trigger_player_thought", "SkyrimNet: Trigger Player Thought")\r\n  \r\n    RegisterForModEvent("skynet_vrik_trigger_player_dialogue", "OnVrikTriggerPlayerDialogue")\r\n    VRIK.VrikAddGestureAction("skynet_vrik_trigger_player_dialogue", "SkyrimNet: Trigger Player Dialogue")\r\nEndFunction\r\n  \r\n; Existing event for narration continuation\r\nEvent OnVrikContinueNarration(string eventName, string strArg, float numArg, Form sender)\r\n    SkyrimNetApi.TriggerContinueNarration()\r\nEndEvent  \r\n  \r\n; New event for toggling GameMaster\r\nEvent OnVrikToggleGameMaster(string eventName, string strArg, float numArg, Form sender)\r\n    SkyrimNetApi.TriggerToggleGameMaster()\r\nEndEvent\r\n  \r\n; New event for triggering voice input (start recording)\r\nEvent OnVrikTriggerVoiceInput(string eventName, string strArg, float numArg, Form sender)\r\n    SkyrimNetApi.TriggerRecordSpeechPressed()\r\nEndEvent\r\n  \r\n; New event for triggering voice input release (stop recording)\r\nEvent OnVrikTriggerVoiceRelease(string eventName, string strArg, float numArg, Form sender)\r\n    SkyrimNetApi.TriggerRecordSpeechReleased(2.0)\r\nEndEvent\r\n  \r\n; New event for triggering direct input (start recording)\r\nEvent OnVrikTriggerDirectInput(string eventName, string strArg, float numArg, Form sender)\r\n    SkyrimNetApi.TriggerVoiceDirectInputPressed()\r\nEndEvent\r\n  \r\n; New event for triggering direct input release (stop recording)\r\nEvent OnVrikTriggerDirectRelease(string eventName, string strArg, float numArg, Form sender)\r\n    SkyrimNetApi.TriggerVoiceDirectInputReleased(2.0)\r\nEndEvent\r\n  \r\n; New event for triggering autonomous player thought\r\nEvent OnVrikTriggerPlayerThought(string eventName, string strArg, float numArg, Form sender)\r\n    SkyrimNetApi.TriggerPlayerThought()\r\nEndEvent\r\n  \r\n; New event for triggering autonomous player dialogue\r\nEvent OnVrikTriggerPlayerDialogue(string eventName, string strArg, float numArg, Form sender)\r\n    SkyrimNetApi.TriggerPlayerDialogue()\r\nEndEvent ```\n'})})}function d(r={}){const{wrapper:n}={...(0,o.R)(),...r.components};return n?(0,i.jsx)(n,{...r,children:(0,i.jsx)(g,{...r})}):g(r)}},8453:(r,n,e)=>{e.d(n,{R:()=>a,x:()=>l});var t=e(6540);const i={},o=t.createContext(i);function a(r){const n=t.useContext(o);return t.useMemo(function(){return"function"==typeof r?r(n):{...n,...r}},[n,r])}function l(r){let n;return n=r.disableParentContext?"function"==typeof r.components?r.components(i):r.components||i:a(r.components),t.createElement(o.Provider,{value:n},r.children)}}}]);